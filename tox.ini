[tox]
skipsdist=True
envlist=
    lint,
    python{3.8,3.9,3.10}-django{3.2,4.0,4.1}-wagtail{4.1,4.2}
    python{3.11}-django{4.1}-wagtail{4.1,4.2}

[testenv]
install_command=pip install -e ".[testing]" -U {opts} {packages}
commands=
    coverage erase
    coverage run {toxinidir}/testmanage.py test {posargs}
    coverage report --show-missing --fail-under=100

basepython=
    python3.8: python3.8
    python3.9: python3.9
    python3.10: python3.10
    python3.11: python3.11

deps=
    mock>=1.0.0
    django3.2: Django>=3.2,<3.3
    django4.0: Django>=4.0,<4.1
    django4.1: Django>=4.1,<4.2
    wagtail4.1: wagtail>=4.1,<4.2
    wagtail4.2: wagtail>=4.2,<5.0

[testenv:lint]
basepython=python3.8
deps=
    black
    flake8
    isort
commands=
    black --check wagtailinventory setup.py testmanage.py
    flake8 wagtailinventory setup.py testmanage.py
    isort --check-only --diff wagtailinventory testmanage.py

[testenv:interactive]
basepython=python3.8

commands_pre=
    python {toxinidir}/testmanage.py makemigrations
    python {toxinidir}/testmanage.py migrate
    python {toxinidir}/testmanage.py shell -c "from django.contrib.auth.models import User;(not User.objects.filter(username='admin').exists()) and User.objects.create_superuser('admin', 'super@example.com', 'changeme')"
    python {toxinidir}/testmanage.py loaddata wagtailinventory/fixtures/test_blocks.json
    python {toxinidir}/testmanage.py block_inventory

commands=
    {posargs:python testmanage.py runserver 0.0.0.0:8000}

setenv=
    INTERACTIVE=1

[isort]
combine_as_imports=1
lines_after_imports=2
include_trailing_comma=1
multi_line_output=3
skip=.tox,migrations
use_parentheses=1
known_django=django
known_wagtail=wagtail
default_section=THIRDPARTY
sections=FUTURE,STDLIB,DJANGO,WAGTAIL,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
